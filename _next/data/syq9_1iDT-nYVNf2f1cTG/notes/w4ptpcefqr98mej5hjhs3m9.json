{"pageProps":{"note":{"id":"w4ptpcefqr98mej5hjhs3m9","title":"Notes: Resolving Connection Issues from WSL to Windows","desc":"","updated":1732271159615,"created":1732271049414,"tags":["wsl2"],"custom":{},"fname":"til.resolving-connection-issues-from-wsl-to-windows","type":"note","vault":{"fsPath":"vault"},"contentHash":"1fba4a2b128df9d4640c191768954e5f","links":[{"type":"frontmatterTag","from":{"fname":"til.resolving-connection-issues-from-wsl-to-windows","id":"w4ptpcefqr98mej5hjhs3m9","vaultName":"vault"},"value":"tags.wsl2","alias":"wsl2","xvault":false,"to":{"fname":"tags.wsl2"}}],"anchors":{"steps-to-resolve-connection-refused-from-wsl-to-windows":{"type":"header","text":"Steps to Resolve \"Connection Refused\" from WSL to Windows","value":"steps-to-resolve-connection-refused-from-wsl-to-windows","line":10,"column":0,"depth":2},"1-check-windows-ip-address-from-wsl":{"type":"header","text":"1. Check Windows IP Address from WSL","value":"1-check-windows-ip-address-from-wsl","line":12,"column":0,"depth":3},"2-access-service-using-windows-ip-address":{"type":"header","text":"2. Access Service Using Windows IP Address","value":"2-access-service-using-windows-ip-address","line":19,"column":0,"depth":3},"3-check-firewall-settings":{"type":"header","text":"3. Check Firewall Settings","value":"3-check-firewall-settings","line":25,"column":0,"depth":3},"4-ensure-services-in-windows-listen-on-all-interfaces":{"type":"header","text":"4. Ensure Services in Windows Listen on All Interfaces","value":"4-ensure-services-in-windows-listen-on-all-interfaces","line":30,"column":0,"depth":3},"5-use-port-forwarding-with-netsh":{"type":"header","text":"5. Use Port Forwarding with netsh","value":"5-use-port-forwarding-with-netsh","line":33,"column":0,"depth":3},"6-create-or-edit-wslconfig-file":{"type":"header","text":"6. Create or Edit .wslconfig File","value":"6-create-or-edit-wslconfig-file","line":39,"column":0,"depth":3},"powershell-script-to-createedit-wslconfig":{"type":"header","text":"PowerShell Script to Create/Edit .wslconfig","value":"powershell-script-to-createedit-wslconfig","line":42,"column":0,"depth":4},"7-restart-services-in-windows-and-wsl":{"type":"header","text":"7. Restart Services in Windows and WSL","value":"7-restart-services-in-windows-and-wsl","line":72,"column":0,"depth":3},"8-use-localhost-in-wsl":{"type":"header","text":"8. Use localhost in WSL","value":"8-use-localhost-in-wsl","line":79,"column":0,"depth":3}},"children":[],"parent":"tvdcga33h6hi7fxd9cwqd66","data":{}},"body":"<h1 id=\"notes-resolving-connection-issues-from-wsl-to-windows\">Notes: Resolving Connection Issues from WSL to Windows<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes-resolving-connection-issues-from-wsl-to-windows\"></a></h1>\n<h2 id=\"steps-to-resolve-connection-refused-from-wsl-to-windows\">Steps to Resolve \"Connection Refused\" from WSL to Windows<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#steps-to-resolve-connection-refused-from-wsl-to-windows\"></a></h2>\n<h3 id=\"1-check-windows-ip-address-from-wsl\">1. Check Windows IP Address from WSL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-check-windows-ip-address-from-wsl\"></a></h3>\n<p>Use the following command inside WSL to find the IP address used by Windows:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /etc/resolv.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nameserver\n</code></pre>\n<p>The IP address shown is the Windows IP address accessible from WSL.</p>\n<h3 id=\"2-access-service-using-windows-ip-address\">2. Access Service Using Windows IP Address<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-access-service-using-windows-ip-address\"></a></h3>\n<p>Try accessing the service running on Windows from WSL using the IP address obtained earlier. Example:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://10.255.255.254:1234\n</code></pre>\n<h3 id=\"3-check-firewall-settings\">3. Check Firewall Settings<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-check-firewall-settings\"></a></h3>\n<p>Ensure the Windows firewall does not block connections from WSL to Windows. Temporarily disable the firewall to check if it is the cause of the issue:</p>\n<ul>\n<li>Open \"Windows Defender Firewall with Advanced Security\".</li>\n<li>Temporarily disable the firewall for Domain, Private, and Public Network.</li>\n</ul>\n<h3 id=\"4-ensure-services-in-windows-listen-on-all-interfaces\">4. Ensure Services in Windows Listen on All Interfaces<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#4-ensure-services-in-windows-listen-on-all-interfaces\"></a></h3>\n<p>Ensure the service running on Windows listens on all interfaces (<code>0.0.0.0</code>) and not just <code>127.0.0.1</code>.</p>\n<h3 id=\"5-use-port-forwarding-with-netsh\">5. Use Port Forwarding with <code>netsh</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#5-use-port-forwarding-with-netsh\"></a></h3>\n<p>Run the following command in PowerShell with Administrator rights to forward traffic from localhost to the Windows IP accessible from WSL:</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">netsh interface portproxy add v4tov4 listenaddress=127<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1 listenport=1234 connectaddress=10<span class=\"token punctuation\">.</span>255<span class=\"token punctuation\">.</span>255<span class=\"token punctuation\">.</span>254 connectport=1234\n</code></pre>\n<h3 id=\"6-create-or-edit-wslconfig-file\">6. Create or Edit <code>.wslconfig</code> File<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#6-create-or-edit-wslconfig-file\"></a></h3>\n<p>Create or edit the <code>.wslconfig</code> file in the <code>%UserProfile%</code> directory with the <code>networkingMode=mirrored</code> setting.</p>\n<h4 id=\"powershell-script-to-createedit-wslconfig\">PowerShell Script to Create/Edit <code>.wslconfig</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#powershell-script-to-createedit-wslconfig\"></a></h4>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Define the path to the .wslconfig file in the User Profile directory</span>\n<span class=\"token variable\">$wslConfigPath</span> = <span class=\"token string\">\"<span class=\"token variable\">$env</span>:UserProfile\\.wslconfig\"</span>\n\n<span class=\"token comment\"># Content to be added to the .wslconfig file</span>\n<span class=\"token variable\">$newContent</span> = <span class=\"token string\">\"networkingMode=mirrored\"</span>\n\n<span class=\"token comment\"># Check if the .wslconfig file exists</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token variable\">$wslConfigPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># Read the content of the .wslconfig file</span>\n    <span class=\"token variable\">$content</span> = <span class=\"token function\">Get-Content</span> <span class=\"token variable\">$wslConfigPath</span>\n\n    <span class=\"token comment\"># Check if the [wsl2] section exists</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span> <span class=\"token operator\">-match</span> <span class=\"token string\">'\\[wsl2\\]'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\"># If the [wsl2] section exists, add the new setting below it</span>\n        <span class=\"token function\">Add-Content</span> <span class=\"token operator\">-</span>Path <span class=\"token variable\">$wslConfigPath</span> <span class=\"token operator\">-</span>Value <span class=\"token variable\">$newContent</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\"># If the [wsl2] section does not exist, add the entire [wsl2] section and the new setting</span>\n        <span class=\"token function\">Add-Content</span> <span class=\"token operator\">-</span>Path <span class=\"token variable\">$wslConfigPath</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"[wsl2]`n<span class=\"token variable\">$newContent</span>\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># If the file does not exist, create a new file with the entire [wsl2] section and the setting</span>\n    <span class=\"token function\">Set-Content</span> <span class=\"token operator\">-</span>Path <span class=\"token variable\">$wslConfigPath</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"[wsl2]`n<span class=\"token variable\">$newContent</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">Write-Output</span> <span class=\"token string\">\"Setting has been added to <span class=\"token variable\">$wslConfigPath</span>:\"</span>\n<span class=\"token function\">Get-Content</span> <span class=\"token variable\">$wslConfigPath</span>\n</code></pre>\n<h3 id=\"7-restart-services-in-windows-and-wsl\">7. Restart Services in Windows and WSL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#7-restart-services-in-windows-and-wsl\"></a></h3>\n<p>Restart the services running in Windows and the WSL distribution:</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span>shutdown\nwsl\n</code></pre>\n<h3 id=\"8-use-localhost-in-wsl\">8. Use <code>localhost</code> in WSL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#8-use-localhost-in-wsl\"></a></h3>\n<p>Try accessing <code>localhost</code> directly from WSL:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://localhost:1234\n</code></pre>\n<p>By following these steps, you should be able to resolve the connection issue from WSL to Windows and get the desired response.</p>\n<p>I hope these notes are helpful! If you have any further questions or need additional assistance, feel free to ask.</p>\n<hr>\n<h2 id=\"tags\">Tags<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a></h2>\n<ol>\n<li><a class=\"color-tag\" style=\"--tag-color: #ba6873;\" href=\"/sotoy/notes/dkqx8ibgpx6udhieo5qvqot\">wsl2</a></li>\n</ol>","noteIndex":{"id":"oqxmejlafk9x8rj9t5hya5z","title":"Hi 👋","desc":"","updated":1721116613997,"created":1646842475821,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"64c62caa2f0c02c2d68a5a2d826cc01e","links":[],"anchors":{"welcome-to-sotoy":{"type":"header","text":"Welcome to Sotoy","value":"welcome-to-sotoy","line":8,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":12,"column":0,"depth":2}},"children":["spfwom01chbihki1twghclf","bsv930j2j6qlih60c7eu7wh","ohf85tu5nw2b8ewx6cetsmp","u3lhhpriar8wgcjw8svapha","tvdcga33h6hi7fxd9cwqd66"],"parent":null,"data":{},"body":"\n# Welcome to Sotoy\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"seeds":{"dendron.templates":{}},"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"Sotoy","description":"Personal knowledge space about anything I learn. Notes, knowledge, and ideas from me.","author":"Zeihan Aulia","twitter":"zeihanaulia","image":{"url":"https://pbs.twimg.com/profile_images/502375255256485888/1UYtt7PT_400x400.jpeg","alt":"Software Engineer, "}},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/sotoy","siteUrl":"https://zeihanaulia.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault-private","vault","dendron.templates"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}